<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_snc_polls.PollData_Retriever</api_name>
        <client_callable>false</client_callable>
        <description/>
        <name>PollData_Retriever</name>
        <script><![CDATA[var PollData_Retriever = Class.create();
PollData_Retriever.prototype = {
	
	initialize: function() {},
	
	getQuestions: function(pollId) {
		var questionRec = new GlideRecordSecure("x_snc_polls_question");
		questionRec.addQuery("poll", pollId);
		questionRec.query();
		var questions = {
			as_list: [],
			as_map: {},
		};
		while (questionRec.next()) {
			var choices = this.getChoices(questionRec.getUniqueValue());
			var question = {
				id: questionRec.getUniqueValue(),
				question: questionRec.getValue("question"),
				choices: choices,
			};
			questions.as_list.push(question);
			questions.as_map[question.id] = question;
		}
		return questions;
	},
	
	getChoices: function(questionId) {
		var choiceRec = new GlideRecordSecure("x_snc_polls_choices");
		choiceRec.addQuery("question", questionId);
		choiceRec.query();
		var choices = [];
		while (choiceRec.next()) {
			var choice = {
				id: choiceRec.getUniqueValue(),
				choice: choiceRec.getValue("choice"),
				score: choiceRec.getValue("votes"),
			};
			choices.push(choice);
		}
		return choices;
	},
	
	questionValidForPoll: function(pollId, questionId) {
		var questionRec = new GlideRecordSecure("x_snc_polls_question");
		questionRec.addQuery("sys_id", questionId);
		questionRec.addQuery("poll", pollId);
		questionRec.query();
		return questionRec.next();
	},
	
	choiceValidForQuestion: function(questionId, choiceValue) {
		var choiceRec = new GlideRecordSecure("x_snc_polls_choices");
		choiceRec("question", questionId);
		choiceRec("choice", choiceValue);
		choiceRec.query();
		return choiceRec.next();
	},
	
	getResultsByUser: function(pollId) {
		var questionRec = new GlideRecordSecure("x_snc_polls_question");
		questionRec.addQuery("poll", pollId);
		questionRec.query();
		var questions = [];
		while (questionRec.next()) {
			var question = {
				question: questionRec.getValue("question"),
				users: [],
			};
			var pollResponse = new GlideRecordSecure("x_snc_polls_poll_response");
			pollResponse.addQuery("question", questionRec.getUniqueValue());
			pollResponse.query();
			while (pollResponse.next()) {
				question.users.push({
					user: pollResponse.getValue("sys_created_by"),
					answer: pollResponse.getValue("response"),
				});
			}
			questions.push(question);
		}
		return questions;
	},
	type: 'PollData_Retriever'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2016-04-30 22:02:37</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>927452e6134b1200ed373d62f244b06f</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>PollData_Retriever</sys_name>
        <sys_package display_value="Polls" source="x_snc_polls">cd1f2766133e1200ed373d62f244b082</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Polls">cd1f2766133e1200ed373d62f244b082</sys_scope>
        <sys_update_name>sys_script_include_927452e6134b1200ed373d62f244b06f</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2016-04-30 22:30:52</sys_updated_on>
    </sys_script_include>
</record_update>
